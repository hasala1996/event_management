# Generated by Django 4.1.4 on 2024-11-14 22:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "created_by",
                    models.UUIDField(db_column="created_by", editable=False, null=True),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        auto_now=True, db_column="modified_at", null=True
                    ),
                ),
                (
                    "modified_by",
                    models.UUIDField(
                        db_column="modified_by", editable=False, null=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(db_column="deleted_at", null=True)),
                (
                    "deleted_by",
                    models.UUIDField(db_column="deleted_by", editable=False, null=True),
                ),
                ("phone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"db_table": "attendee",},
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "created_by",
                    models.UUIDField(db_column="created_by", editable=False, null=True),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        auto_now=True, db_column="modified_at", null=True
                    ),
                ),
                (
                    "modified_by",
                    models.UUIDField(
                        db_column="modified_by", editable=False, null=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(db_column="deleted_at", null=True)),
                (
                    "deleted_by",
                    models.UUIDField(db_column="deleted_by", editable=False, null=True),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={"verbose_name_plural": "categories", "db_table": "category",},
        ),
        migrations.CreateModel(
            name="Speaker",
            fields=[
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "created_by",
                    models.UUIDField(db_column="created_by", editable=False, null=True),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        auto_now=True, db_column="modified_at", null=True
                    ),
                ),
                (
                    "modified_by",
                    models.UUIDField(
                        db_column="modified_by", editable=False, null=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(db_column="deleted_at", null=True)),
                (
                    "deleted_by",
                    models.UUIDField(db_column="deleted_by", editable=False, null=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("bio", models.TextField(blank=True, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
            ],
            options={"db_table": "speaker",},
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "created_by",
                    models.UUIDField(db_column="created_by", editable=False, null=True),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        auto_now=True, db_column="modified_at", null=True
                    ),
                ),
                (
                    "modified_by",
                    models.UUIDField(
                        db_column="modified_by", editable=False, null=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(db_column="deleted_at", null=True)),
                (
                    "deleted_by",
                    models.UUIDField(db_column="deleted_by", editable=False, null=True),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("date", models.DateTimeField()),
                ("location", models.CharField(max_length=200)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="event_management.category",
                    ),
                ),
                (
                    "speakers",
                    models.ManyToManyField(
                        related_name="events", to="event_management.speaker"
                    ),
                ),
            ],
            options={"db_table": "event", "ordering": ["date"],},
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "deleted_by_cascade",
                    models.BooleanField(default=False, editable=False),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "created_by",
                    models.UUIDField(db_column="created_by", editable=False, null=True),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        auto_now=True, db_column="modified_at", null=True
                    ),
                ),
                (
                    "modified_by",
                    models.UUIDField(
                        db_column="modified_by", editable=False, null=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(db_column="deleted_at", null=True)),
                (
                    "deleted_by",
                    models.UUIDField(db_column="deleted_by", editable=False, null=True),
                ),
                ("reservation_date", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(default="Pending", max_length=20)),
                (
                    "attendee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="event_management.attendee",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="event_management.event",
                    ),
                ),
            ],
            options={
                "db_table": "reservation",
                "ordering": ["reservation_date"],
                "unique_together": {("event", "attendee")},
            },
        ),
    ]
